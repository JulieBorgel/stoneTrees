# General R-package YML for use at ETX. The idea is to build the artifact but have a manual deployment step.
# Note, so as to prevent an accumulation of hundreds of artifacts there is a 4 week expiry on tar balls. This has the ever-so slight chance of causing a deploy step to fail if one attempts to deploy and old artifact - regenerate if so.

stages:
  - test
  - deploy

variables:
  ARTIFACTORY_URL: http://artifactory.etx.local/artifactory/
  APIKEY: AKCp2VoRZYQH6r1uVnU1A4SuKHxuyfKBEaDyRHdp6jyAL5upicPFCzDQCdjdjE8H9wi2sEbF8

image: registry.gitlab.etx.local/etherapeutics/etxdockerfiles/rimage:stable

etxR-stable:
    stage: test
    script:
      - export _R_CHECK_FORCE_SUGGESTS_=0
      - perl -p -i -e 'if($_ ~~ m/Version:/){s/(\d+\.?\d*)\.?\d*/$1\.$ENV{'CI_PIPELINE_ID'}/}' DESCRIPTION
      - R -q -e 'install.packages("lpSolve")'
      - R -q -e 'devtools::install_deps(".",dependencies = c("Imports"))'
      - R CMD build .
      - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)
      - R CMD check "${PKG_FILE_NAME}"
      - R -q -e 'if(any(grepl("WARNING",list.files("/builds/",pattern = "00check.log", recursive = TRUE, full.names=TRUE)))) stop("R CMD check must not report any WARNINGS in order for a build to be considered successful")'
      - R -q -e 'covr::package_coverage(type="all")'
    artifacts:
      expire_in: 4 weeks
      when: always
      paths:
      - ./*.tar.gz
      - ./*.Rcheck

etxR-bleed:
    image: registry.gitlab.etx.local/etherapeutics/etxdockerfiles/rimage:bleed
    stage: test
    allow_failure: true
    script:
      - export _R_CHECK_FORCE_SUGGESTS_=0
      - perl -p -i -e 'if($_ ~~ m/Version:/){s/(\d+\.?\d*)\.?\d*/$1\.$ENV{'CI_PIPELINE_ID'}/}' DESCRIPTION
      - R -q -e 'install.packages("lpSolve")'
      - R -q -e 'devtools::install_deps(".",dependencies = c("Imports"))'
      - R CMD build . --no-build-vignettes --no-manual
      - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)
      - R CMD check "${PKG_FILE_NAME}" --no-build-vignettes --no-manual
      - R -q -e 'if(any(grepl("WARNING",list.files("/builds/",pattern = "00check.log", recursive = TRUE, full.names=TRUE)))) stop("R CMD check must not report any WARNINGS for a build to be considered successful")'
    artifacts:
      expire_in: 1 weeks
      when: always
      paths:
      - ./*.Rcheck
    only:
      - master

deploy_artifactory:
    stage: deploy
    when: manual
    script:
       - export PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)
       - export PKG_STUB=`echo $PKG_FILE_NAME | perl -pe 's/_\d*\.?\d*\.?\d*\.tar\.gz//'`
       - Rscript -e 'install.packages(c("miniCRAN","drat"))'
       - jfrog rt config -url "${ARTIFACTORY_URL}" --apikey "${APIKEY}"
       - mkdir etxCRAN
       - echo $PKG_FILE_NAME
       - Rscript -e  'pkgs <- miniCRAN::pkgAvail("http://artifactory.etx.local/artifactory/etxCRAN/"); suppressWarnings(miniCRAN::makeRepo(row.names(pkgs), path="./etxCRAN", repos="http://artifactory.etx.local/artifactory/etxCRAN/", type=c("source", "win.binary","mac.binary")));'
       - Rscript -e  'drat::insertPackage(Sys.getenv("PKG_FILE_NAME"), repodir = "./etxCRAN", action="archive")'
       - cd etxCRAN/
       - jfrog rt del --quiet=true "etxCRAN/src/contrib/$PKG_STUB*"
       - jfrog rt u --flat=false ./ etxCRAN/
       - cd ..
       - rm -rf ./etxCRAN
    environment:
      name: artifactory
      url: http://artifactory.etx.local/artifactory/
    only:
      - master
